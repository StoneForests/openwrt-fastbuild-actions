#=================================================
# https://github.com/tete1030/openwrt-fastbuild-actions
# Description: FAST building OpenWrt with Github Actions and Docker!
# Lisence: MIT
# Author: Texot
#=================================================

env:
  # DO NOT CHANGE the following here, set them only in forked repo's Settings->Secrets page
  # You don't need to set docker_registry if you are using the default Docker Hub
  # 安全起见以下参数请不要在此更改，在你Fork的repo中，Settings->Secrets页面更改
  # 如果你想使用默认的Docker Hub，你不需要在secrets页面设置docker_registry
  DK_REGISTRY: ${{secrets.docker_registry}}
  DK_USERNAME: ${{secrets.docker_username}}
  DK_PASSWORD: ${{secrets.docker_password}}
  SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}
  TMATE_ENCRYPT_PASSWORD: ${{secrets.TMATE_ENCRYPT_PASSWORD}}

name: Squash builders

# Start every 72 hours
on:
  deployment:
  schedule:
  - cron: '0 */72 * * *'

jobs:
  squash:
    name: ${{matrix.title}} ${{matrix.target}}
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        mode: [normal, test]
        target: [x86_64, wdr4310v1]
        include:
        - mode: normal
          title: Squashing builder
        - mode: test
          title: Squashing test builder
    env:
      GITHUB_CONTEXT: ${{toJSON(github)}}
      MATRIX_CONTEXT: ${{toJSON(matrix)}}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Init build env
      run: scripts/host/init_runner.sh

    - name: Check if skip this job
      run: |
        SKIP_TARGET=1
        if [[ ( "${GITHUB_EVENT_NAME}" == "repository_dispatch" || "${GITHUB_EVENT_NAME}" == "deployment" ) && ${RD_TASK} == "squash" && ( ${RD_TARGET} == "all" || ${RD_TARGET} == ${BUILD_TARGET} ) ]]; then
          SKIP_TARGET=0
        elif [[ "${GITHUB_EVENT_NAME}" == "schedule" ]]; then
          SKIP_TARGET=0
        fi
        echo "::set-env name=SKIP_TARGET::${SKIP_TARGET}"

    - name: Clean up for extra space
      if: env.SKIP_TARGET == '0'
      run: scripts/host/cleanup.sh

    - name: Set up Docker Buildx
      id: buildx
      if: env.SKIP_TARGET == '0'
      uses: crazy-max/ghaction-docker-buildx@v1
      with:
        version: latest

    - name: Configure docker
      if: env.SKIP_TARGET == '0'
      run: |
        . scripts/host/docker.sh
        configure_docker
        login_to_registry

    - name: Check status of builder
      if: env.SKIP_TARGET == '0'
      run: |
        . scripts/host/docker.sh
        # temporarily disable failure guarder
        set +eo pipefail
          IMAGE_DIGEST="$(docker buildx imagetools inspect --raw "${BUILDER_IMAGE_ID_INC}" | perl -pe 'chomp if eof' | openssl dgst -sha256 2>/dev/null ;  exit ${PIPESTATUS[0]})"
          image_check_ret_val=$?
        set -eo pipefail

        if [ "x${image_check_ret_val}" != "x0" ]; then
          echo "No builder found, skipping"
          echo "::set-env name=SKIP_TARGET::1"
        else
          echo "::set-env name=SKIP_TARGET::0"
          echo "::set-env name=IMAGE_DIGEST::${IMAGE_DIGEST}"
        fi

    - name: Download last incremental builder
      if: env.SKIP_TARGET == '0'
      run: |
        . scripts/host/docker.sh
        STRICT_PULL=1 pull_image "${BUILDER_IMAGE_ID_INC}"

    - name: Squash builder when necessary
      if: env.SKIP_TARGET == '0'
      run: |
        . scripts/host/docker.sh
        DK_LAYER_NUMBER_LIMIT=20 squash_image_when_necessary "${BUILDER_IMAGE_ID_INC}"

    - name: Upload squashed builder
      if: env.SKIP_TARGET == '0'
      run: |
        . scripts/host/docker.sh
        TMP_BUILDER_IMAGE_ID="${BUILDER_IMAGE_ID_INC}-squashtmp"
        docker tag "${BUILDER_IMAGE_ID_INC}" "${TMP_BUILDER_IMAGE_ID}"
        docker push "${TMP_BUILDER_IMAGE_ID}"

        set +eo pipefail
          CUR_IMAGE_DIGEST="$(docker buildx imagetools inspect --raw "${BUILDER_IMAGE_ID_INC}" | perl -pe 'chomp if eof' | openssl dgst -sha256 2>/dev/null ;  exit ${PIPESTATUS[0]})"
          image_check_ret_val=$?
        set -eo pipefail

        if [ "x${image_check_ret_val}" != "x0" ]; then
          echo "::error::Image disappeared!?" >&2
          exit 1
        fi

        if [ "x${CUR_IMAGE_DIGEST}" != "x${IMAGE_DIGEST}" ]; then
          echo "::error::Image '${BUILDER_IMAGE_ID_INC}' has changed during squashing, aborting" >&2
        else
          create_remote_tag_alias "${TMP_BUILDER_IMAGE_ID}" "${BUILDER_IMAGE_ID_INC}"
        fi
